package rs.ac.singidunum.tf.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import rs.ac.singidunum.tf.entities.Clan;
import rs.ac.singidunum.tf.repository.ClanRepository;

@RestController
@RequestMapping
public class ClanController {	
	@Autowired // This means to get the bean called repository
    // Which is auto-generated by Spring, we will use it to handle the data
	private ClanRepository repository;
	
	public ClanController(ClanRepository repository) {
		this.repository = repository;
	}
	
	@CrossOrigin
	@GetMapping("/clan")
	public @ResponseBody Iterable<Clan> getAll(){
		// This returns a JSON or XML with the books
		return repository.findAll();
	}
	
	@CrossOrigin
	@GetMapping("/clan/{id}")
	public Clan getclan(@PathVariable Integer id) {
		return repository.findById(id).orElse(null); 
	}
	
	@CrossOrigin
	@PostMapping("/clan")
	public Clan createclan(@RequestBody Clan clan) {
		return repository.save(clan);
	}
	
	@CrossOrigin
	@DeleteMapping("/clan/{id}")
	public boolean deleteclan(@PathVariable Integer id) {
		repository.deleteById(id);
		return true;
	}
	
	@CrossOrigin
	@PutMapping("/clan/{id}")
	public Clan updateclan(@PathVariable Integer id, @RequestBody Clan clan) {
		return repository.save(clan);
	}
	
}
