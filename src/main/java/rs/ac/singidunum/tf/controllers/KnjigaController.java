package rs.ac.singidunum.tf.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import rs.ac.singidunum.tf.entities.Knjiga;
import rs.ac.singidunum.tf.repository.KnjigaRepository;

@RestController
@RequestMapping
public class KnjigaController {
	@Autowired // This means to get the bean called repository
    // Which is auto-generated by Spring, we will use it to handle the data
	private KnjigaRepository repository;
	
	public KnjigaController(KnjigaRepository repository) {
		this.repository = repository;
	}
	
	@CrossOrigin
	@GetMapping("/knjiga")
	public @ResponseBody Iterable<Knjiga> getAll() {
	    // This returns a JSON or XML with the books
	    return repository.findAll();
	  }
	
	@CrossOrigin
	@GetMapping("/knjiga/{id}")
	public Knjiga getKnjiga(@PathVariable Integer id) {
		return repository.findById(id).orElse(null); 
	}
	
	@CrossOrigin
	@PostMapping("/knjiga")
	public Knjiga createKnjiga(@RequestBody Knjiga knjiga) {
		return repository.save(knjiga);
	}
	
	@CrossOrigin
	@DeleteMapping("/knjiga/{id}")
	public boolean deleteKnjiga(@PathVariable Integer id) {
		repository.deleteById(id);
		return true;
	}
	
	@CrossOrigin
	@PutMapping("/knjiga/{id}")
	public Knjiga updateKnjiga(@PathVariable Integer id, @RequestBody Knjiga knjiga) {
		return repository.save(knjiga);
	}
	
}

